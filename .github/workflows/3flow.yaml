name: 'Release tag'
on:
  workflow_dispatch:
  push:
    tags:
      - '*'
concurrency:
  group: releasebuild-group
  cancel-in-progress: true
jobs:
  build-and-push:
    permissions:
      id-token: write
      contents: write
    env: 
      REPO_NAME:  "testi"
      REPO_USER:  "Bungalo"
      USERNAME:   "Bungalo"
      GH_TOKEN:   "$GITHUB_TOKEN"
    runs-on: ubuntu-latest
    steps:
      - name: Identify for github
        run:  git config --global user.email "example@exmple123.com"; git config --global user.name "user";
      - name: Clone
        run:  git clone https://github.com/$REPO_USER/$REPO_NAME
        #Using marketplace action for AWS authentication
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::270903434671:role/github_actions
          aws-region: us-east-1
      - name: Authenticate with ECR and push image
        run:  |  
            aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
            cd $REPO_NAME; docker build -t public.ecr.aws/t8z1b8a3/pretia_repo:$GITHUB.REF_NAME -f deployment/Dockerfile .
            docker image ls
            docker push public.ecr.aws/t8z1b8a3/pretia_repo:$GITHUB_REF_NAME
      
      - name: Update and push production.yaml
        run:  |
          cd $REPO_NAME; yq -i '(.spec.template.spec.containers[] | select(.name == "nginx") | .image) = "'public.ecr.aws/t8z1b8a3/pretia_repo:$GITHUB_REF_NAME'"' deployment/production.yaml
          cat deployment/production.yaml
          git add deployment/production.yaml
          git commit -m "Update image tag"
          git push https://$USERNAME:${{ secrets.GITHUB_TOKEN }}@github.com/$REPO_USER/$REPO_NAME.git      
      - name: Create release from tag 
        run:  | 
          cd $REPO_NAME
          #Get message from tag
          TAG_RELEASE_MSG="$(git tag -l --format='%(contents:subject)' $GITHUB_REF_NAME)"
          touch ../notes_file; echo "What's New" > ../notes_file; echo $TAG_RELEASE_MSG >> ../notes_file
          #Combine automatically generated notes with notes from the tag and create release
          gh release create $GITHUB_REF_NAME --generate-notes --verify-tag -F ../notes_file
          rm ../notes_file
